rm(list = ls())
library(ebvSim)
data(trial.1)
# create a vector of specific scenarios
i <- c(1, 5, 10, 12, 20)
runEBVsim(
label = "EIA_trial.1_1",
scenarios = trial.1[i, ],
num.rep = 10,
num.cores = 4
)
getwd()
setwd("/home")
getwd()
rm(list = ls())
library(ebvSim)
data(trial.1)
# create a vector of specific scenarios
i <- c(1, 5, 10, 12, 20)
runEBVsim(
label = "EIA_trial.1_1",
scenarios = trial.1[i, ],
num.rep = 10,
num.cores = 4
)
setwd("/home/user")
rm(list = ls())
library(ebvSim)
data(trial.1)
# create a vector of specific scenarios
i <- c(1, 5, 10, 12, 20)
runEBVsim(
label = "EIA_trial.1_1",
scenarios = trial.1[i, ],
num.rep = 10,
num.cores = 4
)
dir
dir()
q()
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
setwd("/home/user/Documents/SSRvSNP/Code/filtering_QC/preliminarySubset/structure/preliminarySubset_all/")
# Lists individual IDs, population IDs, and Q values for each pop. Default command reads UTF-8
k7 <- read.table("K7_ClumppIndFile.output.tsv", header=T, fileEncoding="UTF-7")
# Make a vector of names
names <- k7$PopID
# Make a vector for name positions on graph
labelPos <- c(1,2,3.4,4.4,5.6,7,8,9.2,10.5,11.7,12.9,14)
# Plotting function for K of any value
plot_k <- function(klist,labelPositions,...){
# List of colors, which are combinations of RGB components, in hexadecimal
colors <- c("#2171B5","#D95F02","#7570B3","#E7298A","#66A61E","#8C510A","#666666")
# Graphing parameters
for(i in 1:length(klist)){
if(i==1){
# Initial barplot
barplot(klist[,i], horiz=F, beside=F, col=colors[i], axisnames=T, space=0.2, yaxt= "n", main="K=7")
off.value <- klist[,i]
}else{
# Subsequent barplots with offset
barplot(klist[,i], offset=off.value, add=T, beside=F, xlim=c(0,100), horiz=F, col=colors[i], yaxt= "n")
off.value <- off.value + klist[,i]
}
}
# y axis
axis(2, at = c(0, 0.25, 0.5, 0.75, 1), labels=c("0", "0.25", "0.50", "0.75", "1.00"), cex.axis = 1, las = 2, pos = -0.2, xpd=T)
# Add group labels
text(x=labelPositions, y=-0.031, srt=45, adj=1, xpd=TRUE, labels=names, cex=1)
}
plot_k(k7[,4:10], labelPos)
setwd("/home/user/Documents/SSRvSNP/Code/filtering_QC/preliminarySubset/structure/preliminarySubset_1000/")
setwd("/home/user/Documents/SSRvSNP/Code/filtering_QC/preliminarySubset/structure/preliminarySubset_all/")
# Lists individual IDs, population IDs, and Q values for each pop. Default command reads UTF-8
k7 <- read.table("K7_ClumppIndFile.output.tsv", header=T, fileEncoding="UTF-7")
# Make a vector of names
names <- k7$PopID
# Make a vector for name positions on graph
labelPos <- c(1,2,3.4,4.4,5.6,7,8,9.2,10.5,11.7,12.9,14)
# Plotting function for K of any value
plot_k <- function(klist,labelPositions,...){
# List of colors, which are combinations of RGB components, in hexadecimal
colors <- c("#2171B5","#D95F02","#7570B3","#E7298A","#66A61E","#8C510A","#666666")
# Graphing parameters
for(i in 1:length(klist)){
if(i==1){
# Initial barplot
barplot(klist[,i], horiz=F, beside=F, col=colors[i], axisnames=T, space=0.2, yaxt= "n", main="K=7")
off.value <- klist[,i]
}else{
# Subsequent barplots with offset
barplot(klist[,i], offset=off.value, add=T, beside=F, xlim=c(0,100), horiz=F, col=colors[i], yaxt= "n")
off.value <- off.value + klist[,i]
}
}
# y axis
axis(2, at = c(0, 0.25, 0.5, 0.75, 1), labels=c("0", "0.25", "0.50", "0.75", "1.00"), cex.axis = 1, las = 2, pos = -0.2, xpd=T)
# Add group labels
text(x=labelPositions, y=-0.031, srt=45, adj=1, xpd=TRUE, labels=names, cex=1)
}
plot_k(k7[,4:10], labelPos)
par("mai")
d_par.mai
c(1.45,0.82,0.82,0.42) <- par("mai")
c(1.45,0.82,0.82,0.42) <- par(mai)
par(mai=c(1.45,0.82,0.82,0.42))
par("mai")
par(mai=c(1.45,0.82,0.82,0.42))
par("mai")
plot_k(k7[,4:10], labelPos)
par(mai=c(2,0.82,0.82,0.42))
par("mai")
plot_k(k7[,4:10], labelPos)
?par
par(mai=c(1,0.82,1.25,0.82))
plot_k(k7[,4:10], labelPos)
par(mai=c(1,0.82,1.75,0.82))
par(mai=c(1,0.82,1.75,0.82))
plot_k(k7[,4:10], labelPos)
